apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    run: neo4j
  name: neo4j
spec:
  replicas: 1
  selector:
    matchLabels:
      run: neo4j
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        run: neo4j
    spec:
      initContainers:
      - image: busybox
        name: copy-snapshot
        command: ["/bin/sh"]
        args: ["-c", "set -x; mkdir -p /data/databases; cp -r /snapshots/graph.db /data/databases"]
        volumeMounts:
        - mountPath: /snapshots
          name: data-snapshots
        - mountPath: /data
          name: data-inmemory
      containers:
      - image: neo4j
        imagePullPolicy: Always
        name: neo4j
        ports:
        - containerPort: 7687
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /data
          name: data-inmemory
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - name: data-snapshots
        persistentVolumeClaim:
          claimName: neo4j-snapshots
      - name: data-inmemory
        emptyDir:
          medium: Memory
